<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Autotest on </title>
    <link>http://blog.titangroupco.com/tags/autotest/index.xml</link>
    <description>Recent content in Autotest on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Powered by [Hugo](//gohugo.io). Theme by [DevTeam](mailto:dev@titangroupco.com) of Titan.</copyright>
    <atom:link href="http://blog.titangroupco.com/tags/autotest/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>jmeter introduce</title>
      <link>http://blog.titangroupco.com/2017/03/07/jmeter-introduce</link>
      <pubDate>Tue, 07 Mar 2017 10:44:56 +0800</pubDate>
      
      <guid>http://blog.titangroupco.com/2017/03/07/jmeter-introduce</guid>
      <description>&lt;p&gt;&lt;img src=&#34;http://blog.titangroupco.com/img/jmeter.jpg&#34; alt=&#34;image&#34; /&gt;
&lt;/p&gt;

&lt;h1 id=&#34;jmeter-windows下安装步骤&#34;&gt;Jmeter  windows下安装步骤：&lt;/h1&gt;

&lt;h2 id=&#34;一-安装jdk&#34;&gt;一.安装JDK&lt;/h2&gt;

&lt;h3 id=&#34;步骤一-安装jdk&#34;&gt;【步骤一】安装jdk：&lt;/h3&gt;

&lt;p&gt;&amp;emsp;jdk下载地址：&lt;a href=&#34;http://www.oracle.com/technetwork/java/javase/downloads/index.html&#34;&gt;http://www.oracle.com/technetwork/java/javase/downloads/index.html&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;步骤二-配置jdk环境变量&#34;&gt;【步骤二】配置jdk环境变量&lt;/h3&gt;

&lt;p&gt;&amp;emsp;右键计算机属性-&amp;gt;高级系统设置-&amp;gt;系统属性-&amp;gt;高级-&amp;gt;环境变量-&amp;gt;添加如下的系统变量：&lt;/p&gt;

&lt;p&gt;&amp;emsp;变量名：【JAVA_HOME】&lt;/p&gt;

&lt;p&gt;&amp;emsp;变量值：【D:\Program Files\Java\jdk1.8.0_112】【jdk安装路径】&lt;/p&gt;

&lt;p&gt;&amp;emsp;变量名：【path】&lt;/p&gt;

&lt;p&gt;&amp;emsp;变量值：【\;%JAVA_HOME%\bin;】&lt;/p&gt;

&lt;p&gt;&amp;emsp;变量名：【CLASSPATH】&lt;/p&gt;

&lt;p&gt;&amp;emsp;变量值：【.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;】【.不能漏】&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.titangroupco.com/img/path.jpg&#34; alt=&#34;image&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;步骤三-验证jdk&#34;&gt;【步骤三】验证jdk&lt;/h3&gt;

&lt;p&gt;&amp;emsp;运行cmd-&amp;gt;输入java -version-&amp;gt;显示java版本就表示jdk安装成功，如下图
&lt;img src=&#34;http://blog.titangroupco.com/img/cmd.png&#34; alt=&#34;image&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;二-jmeter安装&#34;&gt;二.Jmeter安装&lt;/h2&gt;

&lt;h3 id=&#34;步骤一-安装jmeter&#34;&gt;【步骤一】安装Jmeter&lt;/h3&gt;

&lt;p&gt;&amp;emsp;1、下载Jmeter，官网地址：&lt;a href=&#34;http://jmeter.apache.org/download_jmeter.cgi&#34;&gt;http://jmeter.apache.org/download_jmeter.cgi&lt;/a&gt;
&amp;emsp;2、解压Jmeter安装包&lt;/p&gt;

&lt;h3 id=&#34;步骤二-配置jmeter环境变量&#34;&gt;【步骤二】配置Jmeter环境变量&lt;/h3&gt;

&lt;p&gt;&amp;emsp;按下面变量名和变量值配置Jmeter系统环境变量：&lt;/p&gt;

&lt;p&gt;&amp;emsp;【变量名】JMETER_HOME&lt;/p&gt;

&lt;p&gt;&amp;emsp;【变量值】F:\CYL\test\jmeter\apache-jmeter-3.0（根据实际的jmeter解压路径填写）&lt;/p&gt;

&lt;p&gt;&amp;emsp;【变量名】CLASSPATH&lt;/p&gt;

&lt;p&gt;&amp;emsp;【变量值】%JMETER_HOME\lib\ext\ApacheJMeter_core.jar;%JMETER_HOME%\lib\jorphan.jar;%JMETER_HOME%\lib\logkit-2.0.jar;
&lt;img src=&#34;http://blog.titangroupco.com/img/path1.png&#34; alt=&#34;image&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;步骤三-启动jmeter&#34;&gt;【步骤三】启动Jmeter&lt;/h3&gt;

&lt;p&gt;&amp;emsp;双击Jmeter解压路径（D:\Program Files\apache-jmeter-3.1\apache-jmeter-3.1\bin）的bin下面的jmeter.bat，如下图
&lt;img src=&#34;http://blog.titangroupco.com/img/runjmeter.png&#34; alt=&#34;image&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;三-jmeter使用&#34;&gt;三.Jmeter使用&lt;/h2&gt;

&lt;p&gt;&amp;emsp;Jmeter有两种运行模式，一种是GUI模式，GUI模式非常消耗资源，单个客户端测试无法达到目标压力。而使用非 GUI 模式，即命令行模式运行JMeter测试脚本能够大大缩减所需要的系统资源，使用远程启动模式也可以像Loadrunner那样进行分布式测试。&lt;/p&gt;

&lt;h3 id=&#34;步骤一-http协议接口测试&#34;&gt;【步骤一】http协议接口测试&lt;/h3&gt;

&lt;p&gt;&amp;emsp;1.测试计划下新增线程组&lt;/p&gt;

&lt;p&gt;&amp;emsp;2.线程组下新增http信息头管理器&lt;/p&gt;

&lt;p&gt;&amp;emsp;名称：Content-Type 值：application/json&lt;/p&gt;

&lt;p&gt;&amp;emsp;3.增加http请求和结果显示
&amp;emsp;4.运行测试&lt;/p&gt;

&lt;h3 id=&#34;步骤一-no-gui启动测试&#34;&gt;【步骤一】no-gui启动测试&lt;/h3&gt;

&lt;p&gt;&amp;emsp;1.DOS命令执行语法：jmeter -n -t &lt;testplan filename&gt; -l &lt;listener filename&gt;。&lt;/p&gt;

&lt;p&gt;&amp;emsp;2.如果脚本在其他目录，并且执行结果存放到其他目录，需要使用绝对路径，cmd中如：jmeter -n -t D:\E\02_Test\A2_性能测试\JMeter\JMeter脚本\product_select.jmx -l D:\E\02_Test\A2_性能测试\JMeter\JMeter测试结果\product_select_20160311001.jtl1&lt;/p&gt;

&lt;h2 id=&#34;四-badboy-jmeter配合使用&#34;&gt;四.Badboy+Jmeter配合使用&lt;/h2&gt;

&lt;h3 id=&#34;步骤一-badboy简介&#34;&gt;【步骤一】badboy简介&lt;/h3&gt;

&lt;p&gt;&amp;emsp;Badboy是用C++开发的，被用于测试和开发复杂的动态应用。它提供了强大的屏幕录制和回放功能，同时也提供了丰富的图形结果分析功能。只要不用于商业目的就可以免费使用。因此这两工具的结合，就成为了绝配。我们可以用Badboy录制脚本，然后将录制的脚本导出为JMeter格式的脚本，最后将该脚本导入到JMeter，借助于JMeter强大的测试功能模拟大量的虚拟用户，进行复杂的性能测试。
其下载地址为&lt;a href=&#34;http://www.badboy.com.au&#34;&gt;http://www.badboy.com.au&lt;/a&gt;
下载完后需要进行安装，安装过程同一般的Windows 应用程序没有什么区别，安装完成后你可以在桌面和Windows开始菜单中看到相应的快捷方式。如果找不到，可以找一下Badboy安装目录下的Badboy.exe文件，直接双击启动Badboy。最后开到的启动界面如下：&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.titangroupco.com/img/badboy.png&#34; alt=&#34;image&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;步骤一-badboy使用方法&#34;&gt;【步骤一】badboy使用方法&lt;/h3&gt;

&lt;p&gt;&amp;emsp;a.在地址栏（图中红色方框标注的部分）中输入你需要录制的Web应用的URL，这里我们以&lt;a href=&#34;http://www.baidu.com&#34;&gt;http://www.baidu.com&lt;/a&gt;
为例。&lt;/p&gt;

&lt;p&gt;&amp;emsp;b.点击“开始录制”按钮（图中蓝色圆圈标注的部分）开始录制 。&lt;/p&gt;

&lt;p&gt;&amp;emsp;c.开始录制后，你可以直接在Badboy内嵌的浏览器（主界面的右侧）中对被测应用进行操作，所有的操作都会被记录在主界面左侧的编辑窗口中（图中黄色方框标注的部分）。在这个试验中，我们在baidu的搜索引擎中输入 JMeter 进行搜索。不过录制下来的脚本并不是一行行的代码，而是一个个Web对象——这有点像LoadRunner的VuGen中的Tree View视图。&lt;/p&gt;

&lt;p&gt;&amp;emsp;d.录制完成后，点击工具栏中的“停止录制”按钮（图中紫色方框标注的部分），完成脚本的录制。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.titangroupco.com/img/export.png&#34; alt=&#34;image&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&amp;emsp;e.选择“File -&amp;gt; Export to JMeter”菜单，填写文件名“baidu.jmx”，将录制好脚本导出为JMeter脚本格式。也可以选择“File -&amp;gt; Save”菜单保存为Badboy脚本。&lt;/p&gt;

&lt;p&gt;&amp;emsp;f.启动JMeter并打开刚刚生成的测试脚本，就可以用JMeter进行测试。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>RF中页面元素定位</title>
      <link>http://blog.titangroupco.com/2017/01/22/rf%E4%B8%AD%E9%A1%B5%E9%9D%A2%E5%85%83%E7%B4%A0%E5%AE%9A%E4%BD%8D</link>
      <pubDate>Sun, 22 Jan 2017 17:03:51 +0800</pubDate>
      
      <guid>http://blog.titangroupco.com/2017/01/22/rf%E4%B8%AD%E9%A1%B5%E9%9D%A2%E5%85%83%E7%B4%A0%E5%AE%9A%E4%BD%8D</guid>
      <description>&lt;h1 id=&#34;rf中页面元素定位&#34;&gt;RF中页面元素定位&lt;/h1&gt;

&lt;h3 id=&#34;1-robot-framework-selenium做ui自动化测试&#34;&gt;1.Robot Framework+selenium做UI自动化测试&lt;/h3&gt;

&lt;h3 id=&#34;2-页面元素定位&#34;&gt;2.页面元素定位&lt;/h3&gt;

&lt;h3 id=&#34;2-1-id和name定位&#34;&gt;2.1 id和name定位&lt;/h3&gt;

&lt;p&gt;假如把一个元素看作一个人的话，id 和name可以看作一个人的身份证号和姓名。当然，这些属性值是否唯一要看前端工程师如何设计了。&lt;/p&gt;

&lt;p&gt;百度搜索框和搜索按钮&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;input type=&amp;quot;text&amp;quot; class=&amp;quot;s_ipt&amp;quot; ==name=&amp;quot;wd&amp;quot;== id=&amp;quot;kw&amp;quot; maxlength=&amp;quot;100&amp;quot; autocomplete=&amp;quot;off&amp;quot;&amp;gt;

&amp;lt;input type=&amp;quot;submit&amp;quot; value=&amp;quot;百度一下&amp;quot; ==id=&amp;quot;su&amp;quot;== class=&amp;quot;btn self-btn bg s_btn&amp;quot;&amp;gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;根据上面的例子，百度输入框可以取id 或name进行定位。（前提是id和name的值在当页面上唯一）&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;id = su
name = wd
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在Robot framework 中写法如下：&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;方法&lt;/th&gt;
&lt;th&gt;定位&lt;/th&gt;
&lt;th&gt;文本&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Input Text&lt;/td&gt;
&lt;td&gt;id=kw&lt;/td&gt;
&lt;td&gt;地图&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Input Text&lt;/td&gt;
&lt;td&gt;name=wd&lt;/td&gt;
&lt;td&gt;地图&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;百度按钮只id数据可以利用：id = su&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;方法&lt;/th&gt;
&lt;th&gt;定位&lt;/th&gt;
&lt;th&gt;文本&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Click Button&lt;/td&gt;
&lt;td&gt;id=su&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Click Button是按钮点击的关键字。&lt;/p&gt;

&lt;h3 id=&#34;2-2-xpath定位&#34;&gt;2.2 xpath定位&lt;/h3&gt;

&lt;p&gt;假如页面元素。既没有id也没有name
例如：cgntes的登录页面&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;input class=&amp;quot;input ng-pristine ng-valid ng-empty ng-touched&amp;quot; autocomplete=&amp;quot;off&amp;quot; ng-change=&amp;quot;vm.loginFailed=false&amp;quot; ng-model=&amp;quot;vm.user.username&amp;quot; placeholder=&amp;quot;请输入用户名&amp;quot; autofocus=&amp;quot;&amp;quot; ng-keyup=&amp;quot;vm.keyUp($event)&amp;quot; tabindex=&amp;quot;1&amp;quot; aria-invalid=&amp;quot;false&amp;quot; style=&amp;quot;&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;ol&gt;
&lt;li&gt;Xpath的绝对路径：&lt;/li&gt;
&lt;/ol&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;Xpath =/html/body/div/titan-login/div/div[1]/div[2]/input
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;我们可以从最外层开始找，html下面的body下面的div下面的第4个div下面的&amp;hellip;.input标签。通过一级一级的锁定就找到了想要的元素。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Xpath的相对路径：&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;绝对路径的用法往往是在我们迫不得已的时候才用的。大多时候用相对路径更简便。
3. 元素本身：
Xpath同样可以利用元素自身的属性：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;Xpath=/html/body/div/titan-login/div/div[1]/div[2]/input[@placeholder=&#39;请输入用户名&#39;]
Xpath = //*[@placeholder=&#39;请输入用户名]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;//表示某个层级下，*表示某个标签名。@placeholder=&amp;lsquo;请输入用户名&amp;rsquo;表示这个元素有个placeholder等于请输入用户名 。
元素本身，可以利用的属性就不只局限为于id和name，但要保证这些元素可以唯一的识别一个元素。&lt;/p&gt;

&lt;p&gt;4.找上级：&lt;/p&gt;

&lt;p&gt;当我们要找的元素没有id和name，但是它有父节点，那么同样可以定位到该元素。&lt;/p&gt;

&lt;p&gt;元素的上级属性为：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;form name=&amp;quot;f&amp;quot; id=&amp;quot;form&amp;quot; action=&amp;quot;/s&amp;quot; class=&amp;quot;fm&amp;quot; onsubmit=&amp;quot;javascript:F.call(&#39;ps/sug&#39;,&#39;pssubmit&#39;)&amp;quot;&amp;gt;
　　&amp;lt;span class=&amp;quot;s_kw_wrap&amp;quot; class=&amp;quot;bg s_ipt_wr quickdelete-wrap&amp;quot;&amp;gt;
  &amp;lt;span class=&amp;quot;soutu-btn&amp;quot;&amp;gt;
　　　 &amp;lt;input  type=&amp;quot;text&amp;quot; class=&amp;quot;s_ipt&amp;quot; name=&amp;quot;wd&amp;quot; id=&amp;quot;kw&amp;quot; maxlength=&amp;quot;100&amp;quot; autocomplete=&amp;quot;off&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;找父节点：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;xpath = //span[@class=’bg s_ipt_wr’]/input
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果父节点没有唯一的属性，可以找父父节点：
xpath = //form[@id=’form’]/span/input
这样一级一级找上去，直到html那么就是一个绝对路径了。&lt;/p&gt;

&lt;h3 id=&#34;2-3-css定位&#34;&gt;2.3 CSS定位&lt;/h3&gt;

&lt;p&gt;CSS的定位更灵活，因为他它用到的更多的匹配符和规格。&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;选择器&lt;/th&gt;
&lt;th&gt;示例&lt;/th&gt;
&lt;th&gt;示例描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;.class&lt;/td&gt;
&lt;td&gt;.intro&lt;/td&gt;
&lt;td&gt;选择 class=&amp;ldquo;intro&amp;rdquo; 的所有元素&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;id&lt;/td&gt;
&lt;td&gt;firstname&lt;/td&gt;
&lt;td&gt;选择 id=&amp;ldquo;firstname&amp;rdquo; 的所有元素&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;*&lt;/td&gt;
&lt;td&gt;*&lt;/td&gt;
&lt;td&gt;选择所有元素&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;element&lt;/td&gt;
&lt;td&gt;p&lt;/td&gt;
&lt;td&gt;选择所有 &lt;p&gt; 元素&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;element.element&lt;/td&gt;
&lt;td&gt;div.p&lt;/td&gt;
&lt;td&gt;选择所有 &lt;div&gt; 元素和所有 &lt;p&gt; 元素&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;element&amp;gt;element&lt;/td&gt;
&lt;td&gt;div&amp;gt;p&lt;/td&gt;
&lt;td&gt;选择父元素为 &lt;div&gt; 元素的所有 &lt;p&gt; 元素&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;element+element&lt;/td&gt;
&lt;td&gt;div+p&lt;/td&gt;
&lt;td&gt;选择紧接在 &lt;div&gt; 元素之后的所有 &lt;p&gt; 元素&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;[attribute]&lt;/td&gt;
&lt;td&gt;[target]&lt;/td&gt;
&lt;td&gt;选择带有 target 属性所有元素&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;[attribute=value]&lt;/td&gt;
&lt;td&gt;[target=_blank]&lt;/td&gt;
&lt;td&gt;选择 target=&amp;rdquo;_blank&amp;rdquo; 的所有元素&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;[attribute~=value]&lt;/td&gt;
&lt;td&gt;[title~=flower]&lt;/td&gt;
&lt;td&gt;选择 title 属性包含单词 &amp;ldquo;flower&amp;rdquo; 的所有元素&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;[attribute=value]&lt;/td&gt;
&lt;td&gt;[lang=en]&lt;/td&gt;
&lt;td&gt;选择 lang 属性值以 &amp;ldquo;en&amp;rdquo; 开头的所有元素&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;同样以百度输入框的代码，具体CSS定位如下：&lt;/p&gt;

&lt;p&gt;id定位：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;css=#kw

class定位：

css=.s_ipt
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;其它属性：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;css=[name=wd]
css=[type=text]
css=[autocomplete=off]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;父子定位：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt; css=span&amp;gt;input
 css=form&amp;gt;span&amp;gt;input
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;根据标签名定位：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;css=input
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;以Cgntest的登录按钮为例子Robot framework 中的写法：&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;方法&lt;/th&gt;
&lt;th&gt;定位&lt;/th&gt;
&lt;th&gt;文本&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Input Text&lt;/td&gt;
&lt;td&gt;css=.btn&lt;/td&gt;
&lt;td&gt;\\13&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Input Text&lt;/td&gt;
&lt;td&gt;css=body &amp;gt; div &amp;gt; titan-login &amp;gt; div &amp;gt; div.form &amp;gt; div.btn&lt;/td&gt;
&lt;td&gt;\\13&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;同样一个元素，根基CSS的不同规则，可能有几十上百种写法。CSS更灵活强大，但是相比Xpath 的学习成本为更高。但是CSS和Xpath两种定位方式是一定要学会一种，不然你的自动化工作更无法开展。&lt;/p&gt;

&lt;h3 id=&#34;2-4-js定位&#34;&gt;2.4 JS定位&lt;/h3&gt;

&lt;p&gt;当碰到使用上述方法仍无法定位时，可选择JS定位，该方法比较通用，能正常定位到所有元素。&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;方法&lt;/th&gt;
&lt;th&gt;定位&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Execute JavaScript&lt;/td&gt;
&lt;td&gt;$(&amp;ldquo;.btn&amp;rdquo;).click()&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;</description>
    </item>
    
  </channel>
</rss>