<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title></title>
    <link>http://blog.titangroupco.com/tags/autotest/index.xml</link>
    <description>Recent content on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Powered by [Hugo](//gohugo.io). Theme by [PPOffice](http://github.com/ppoffice).</copyright>
    <atom:link href="http://blog.titangroupco.com/tags/autotest/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>RF中页面元素定位</title>
      <link>http://blog.titangroupco.com/2017/01/22/rf%E4%B8%AD%E9%A1%B5%E9%9D%A2%E5%85%83%E7%B4%A0%E5%AE%9A%E4%BD%8D</link>
      <pubDate>Sun, 22 Jan 2017 17:03:51 +0800</pubDate>
      
      <guid>http://blog.titangroupco.com/2017/01/22/rf%E4%B8%AD%E9%A1%B5%E9%9D%A2%E5%85%83%E7%B4%A0%E5%AE%9A%E4%BD%8D</guid>
      <description>&lt;h1 id=&#34;rf中页面元素定位&#34;&gt;RF中页面元素定位&lt;/h1&gt;

&lt;h3 id=&#34;1-robot-framework-selenium做ui自动化测试&#34;&gt;1.Robot Framework+selenium做UI自动化测试&lt;/h3&gt;

&lt;h3 id=&#34;2-页面元素定位&#34;&gt;2.页面元素定位&lt;/h3&gt;

&lt;h3 id=&#34;2-1-id和name定位&#34;&gt;2.1 id和name定位&lt;/h3&gt;

&lt;p&gt;假如把一个元素看作一个人的话，id 和name可以看作一个人的身份证号和姓名。当然，这些属性值是否唯一要看前端工程师如何设计了。&lt;/p&gt;

&lt;p&gt;百度搜索框和搜索按钮&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;input type=&amp;quot;text&amp;quot; class=&amp;quot;s_ipt&amp;quot; ==name=&amp;quot;wd&amp;quot;== id=&amp;quot;kw&amp;quot; maxlength=&amp;quot;100&amp;quot; autocomplete=&amp;quot;off&amp;quot;&amp;gt;

&amp;lt;input type=&amp;quot;submit&amp;quot; value=&amp;quot;百度一下&amp;quot; ==id=&amp;quot;su&amp;quot;== class=&amp;quot;btn self-btn bg s_btn&amp;quot;&amp;gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;根据上面的例子，百度输入框可以取id 或name进行定位。（前提是id和name的值在当页面上唯一）&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;id = su
name = wd
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在Robot framework 中写法如下：&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;方法&lt;/th&gt;
&lt;th&gt;定位&lt;/th&gt;
&lt;th&gt;文本&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Input Text&lt;/td&gt;
&lt;td&gt;id=kw&lt;/td&gt;
&lt;td&gt;地图&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Input Text&lt;/td&gt;
&lt;td&gt;name=wd&lt;/td&gt;
&lt;td&gt;地图&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;百度按钮只id数据可以利用：id = su&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;方法&lt;/th&gt;
&lt;th&gt;定位&lt;/th&gt;
&lt;th&gt;文本&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Click Button&lt;/td&gt;
&lt;td&gt;id=su&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Click Button是按钮点击的关键字。&lt;/p&gt;

&lt;h3 id=&#34;2-2-xpath定位&#34;&gt;2.2 xpath定位&lt;/h3&gt;

&lt;p&gt;假如页面元素。既没有id也没有name
例如：cgntes的登录页面&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;input class=&amp;quot;input ng-pristine ng-valid ng-empty ng-touched&amp;quot; autocomplete=&amp;quot;off&amp;quot; ng-change=&amp;quot;vm.loginFailed=false&amp;quot; ng-model=&amp;quot;vm.user.username&amp;quot; placeholder=&amp;quot;请输入用户名&amp;quot; autofocus=&amp;quot;&amp;quot; ng-keyup=&amp;quot;vm.keyUp($event)&amp;quot; tabindex=&amp;quot;1&amp;quot; aria-invalid=&amp;quot;false&amp;quot; style=&amp;quot;&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;ol&gt;
&lt;li&gt;Xpath的绝对路径：&lt;/li&gt;
&lt;/ol&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;Xpath =/html/body/div/titan-login/div/div[1]/div[2]/input
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;我们可以从最外层开始找，html下面的body下面的div下面的第4个div下面的&amp;hellip;.input标签。通过一级一级的锁定就找到了想要的元素。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Xpath的相对路径：&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;绝对路径的用法往往是在我们迫不得已的时候才用的。大多时候用相对路径更简便。
3. 元素本身：
Xpath同样可以利用元素自身的属性：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;Xpath=/html/body/div/titan-login/div/div[1]/div[2]/input[@placeholder=&#39;请输入用户名&#39;]
Xpath = //*[@placeholder=&#39;请输入用户名]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;//表示某个层级下，*表示某个标签名。@placeholder=&amp;lsquo;请输入用户名&amp;rsquo;表示这个元素有个placeholder等于请输入用户名 。
元素本身，可以利用的属性就不只局限为于id和name，但要保证这些元素可以唯一的识别一个元素。&lt;/p&gt;

&lt;p&gt;4.找上级：&lt;/p&gt;

&lt;p&gt;当我们要找的元素没有id和name，但是它有父节点，那么同样可以定位到该元素。&lt;/p&gt;

&lt;p&gt;元素的上级属性为：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;form name=&amp;quot;f&amp;quot; id=&amp;quot;form&amp;quot; action=&amp;quot;/s&amp;quot; class=&amp;quot;fm&amp;quot; onsubmit=&amp;quot;javascript:F.call(&#39;ps/sug&#39;,&#39;pssubmit&#39;)&amp;quot;&amp;gt;
　　&amp;lt;span class=&amp;quot;s_kw_wrap&amp;quot; class=&amp;quot;bg s_ipt_wr quickdelete-wrap&amp;quot;&amp;gt;
  &amp;lt;span class=&amp;quot;soutu-btn&amp;quot;&amp;gt;
　　　 &amp;lt;input  type=&amp;quot;text&amp;quot; class=&amp;quot;s_ipt&amp;quot; name=&amp;quot;wd&amp;quot; id=&amp;quot;kw&amp;quot; maxlength=&amp;quot;100&amp;quot; autocomplete=&amp;quot;off&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;找父节点：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;xpath = //span[@class=’bg s_ipt_wr’]/input
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果父节点没有唯一的属性，可以找父父节点：
xpath = //form[@id=’form’]/span/input
这样一级一级找上去，直到html那么就是一个绝对路径了。&lt;/p&gt;

&lt;h3 id=&#34;2-3-css定位&#34;&gt;2.3 CSS定位&lt;/h3&gt;

&lt;p&gt;CSS的定位更灵活，因为他它用到的更多的匹配符和规格。&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;选择器&lt;/th&gt;
&lt;th&gt;示例&lt;/th&gt;
&lt;th&gt;示例描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;.class&lt;/td&gt;
&lt;td&gt;.intro&lt;/td&gt;
&lt;td&gt;选择 class=&amp;ldquo;intro&amp;rdquo; 的所有元素&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;id&lt;/td&gt;
&lt;td&gt;firstname&lt;/td&gt;
&lt;td&gt;选择 id=&amp;ldquo;firstname&amp;rdquo; 的所有元素&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;*&lt;/td&gt;
&lt;td&gt;*&lt;/td&gt;
&lt;td&gt;选择所有元素&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;element&lt;/td&gt;
&lt;td&gt;p&lt;/td&gt;
&lt;td&gt;选择所有 &lt;p&gt; 元素&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;element.element&lt;/td&gt;
&lt;td&gt;div.p&lt;/td&gt;
&lt;td&gt;选择所有 &lt;div&gt; 元素和所有 &lt;p&gt; 元素&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;element&amp;gt;element&lt;/td&gt;
&lt;td&gt;div&amp;gt;p&lt;/td&gt;
&lt;td&gt;选择父元素为 &lt;div&gt; 元素的所有 &lt;p&gt; 元素&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;element+element&lt;/td&gt;
&lt;td&gt;div+p&lt;/td&gt;
&lt;td&gt;选择紧接在 &lt;div&gt; 元素之后的所有 &lt;p&gt; 元素&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;[attribute]&lt;/td&gt;
&lt;td&gt;[target]&lt;/td&gt;
&lt;td&gt;选择带有 target 属性所有元素&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;[attribute=value]&lt;/td&gt;
&lt;td&gt;[target=_blank]&lt;/td&gt;
&lt;td&gt;选择 target=&amp;rdquo;_blank&amp;rdquo; 的所有元素&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;[attribute~=value]&lt;/td&gt;
&lt;td&gt;[title~=flower]&lt;/td&gt;
&lt;td&gt;选择 title 属性包含单词 &amp;ldquo;flower&amp;rdquo; 的所有元素&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;[attribute=value]&lt;/td&gt;
&lt;td&gt;[lang=en]&lt;/td&gt;
&lt;td&gt;选择 lang 属性值以 &amp;ldquo;en&amp;rdquo; 开头的所有元素&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;同样以百度输入框的代码，具体CSS定位如下：&lt;/p&gt;

&lt;p&gt;id定位：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;css=#kw

class定位：

css=.s_ipt
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;其它属性：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;css=[name=wd]
css=[type=text]
css=[autocomplete=off]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;父子定位：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt; css=span&amp;gt;input
 css=form&amp;gt;span&amp;gt;input
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;根据标签名定位：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;css=input
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;以Cgntest的登录按钮为例子Robot framework 中的写法：&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;方法&lt;/th&gt;
&lt;th&gt;定位&lt;/th&gt;
&lt;th&gt;文本&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Input Text&lt;/td&gt;
&lt;td&gt;css=.btn&lt;/td&gt;
&lt;td&gt;\\13&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Input Text&lt;/td&gt;
&lt;td&gt;css=body &amp;gt; div &amp;gt; titan-login &amp;gt; div &amp;gt; div.form &amp;gt; div.btn&lt;/td&gt;
&lt;td&gt;\\13&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;同样一个元素，根基CSS的不同规则，可能有几十上百种写法。CSS更灵活强大，但是相比Xpath 的学习成本为更高。但是CSS和Xpath两种定位方式是一定要学会一种，不然你的自动化工作更无法开展。&lt;/p&gt;

&lt;h3 id=&#34;2-4-js定位&#34;&gt;2.4 JS定位&lt;/h3&gt;

&lt;p&gt;当碰到使用上述方法仍无法定位时，可选择JS定位，该方法比较通用，能正常定位到所有元素。&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;方法&lt;/th&gt;
&lt;th&gt;定位&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Execute JavaScript&lt;/td&gt;
&lt;td&gt;$(&amp;ldquo;.btn&amp;rdquo;).click()&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;</description>
    </item>
    
  </channel>
</rss>